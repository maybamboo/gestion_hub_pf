<?xml version="1.0" encoding="UTF-8"?>
<loadProcess>
    <files>
        <name>
            <!-- <nameRegex>.*((19|20)[0-9][0-9])(0?[1-9]|1[012])(0?[1-9]|[12][0-9]|3[01]).[t|T][x|X][t|T]</nameRegex> --> <!-- Expresion regular que define el nombre del archivo --> 
            <!-- <nameRegex>.*((0?[1-9]|[12][0-9]|3[01])(0?[1-9]|1[012])(19|20)[0-9][0-9]).[t|T][x|X][t|T]</nameRegex> --> <!-- Expresion regular que define el nombre del archivo -->
	    <nameRegex>${filename}</nameRegex>
            <templateName>template_in</templateName> <!-- El nombre del archivo template en directorio resources/templates (incluir 
                extension) -->
        </name>
        <!-- </name> <nameRegex>regex2</nameRegex> <templateName>test2</templateName> 
            </name> -->
        <protocol>eft.load.filemanager.LocalDirManager</protocol> <!-- dos posibilidades actualmente eft.load.fileManager.FTPManager o eft.load.fileManager.LocalDirManager -->
        <server>localhost</server> <!-- solo necesario para FTP -->
        <dir>/disk1/gestion_hub_pf/rendiciones/carga/archivosCarga</dir>
	<user></user>  <!-- Solo necesario para FTP -->
        <password></password> <!-- Solo necesario para FTP -->
    </files>
    <processor><!-- Procesa uno o mas archivos de acuerdo a la configuracion 
            files -->
        <className>eft.load.processor.SingleFileGenericProcessor</className>  <!-- Nombre de la clase que procesara el archivo -->
        <fileTranslatorClassName>eft.load.translator.GenericFileTranslator</fileTranslatorClassName>
        <!--fileTranslatorClassName>eft.load.translator.ena.FileTranslatorENA</fileTranslatorClassName-->
        <templateOut>template_out</templateOut> <!-- nombre del template reflejo de la tabla a insertar -->
        <acceptedErrors>0</acceptedErrors>    <!-- cantidad de errores aceptados como maximo en la validacion -->
        <emailNotif>monitoreopaygroupnoreply@gmail.com</emailNotif> <!-- e-mail para notificacion de resultado de la carga -->
        <database>
            <type>ORACLE</type>                                       <!-- ORACLE o POSTGRESQL -->
            <injectorClassName>eft.load.inject.ORCLInjector</injectorClassName> <!-- Nombre de la clase que inyecta el archivo en la BD -->
            <serverURL>jdbc:oracle:thin:@10.10.20.203:1541:EFTPANAM</serverURL><!-- ejemplo PG  jdbc:postgresql://10.10.10.179:5432/jjd?searchpath=public--><!-- Ejemplo OR  jdbc:oracle:thin:@10.10.10.173:1521:DEFT -->
            <serverUser>hub_trx_pf</serverUser>           <!-- Usuario de la base de datos -->
            <serverPassword>hubtrxpf.2017</serverPassword>     <!-- ContraseÃ±a del usuario de la base de datos -->
            <serverTNSName>EFTPANAM</serverTNSName>    <!-- TNS nombre de la conexion presente en tnsnames.ora .Necesarios SOLO para bases de datos oracle -->
            <owner>HUB_TRX_PF</owner>          <!-- propietario de la base de datos .Necesarios SOLO para bases de datos oracle -->
            <destinationTable>TEMP_CARGA_CONCILIACION</destinationTable> <!-- Tabla destino -->
            <sequence></sequence> <!-- Secuencia de la base de datos ORACLE formato (Columna|Nobre secuencia) -->
            <procedureLoadId>ID_CARGA|PKG_RENDICION.OBTIENE_IDARCHIVO</procedureLoadId> <!-- Procedimiento almacenado que debe retornar un id para la carga, este id es insertado en todos los registros. EJ: ARCHIVO_ID|PKG_DATALOAD.OBTIENE_IDARCHIVO -->
	     <procedurePreInject>                    <!-- Procedimiento a llamar despues de la injeccion de datos, siempre debe retornar un numero como respuesta -->
                <name></name> <!-- Nombre del procedimiento (PKG_RENDICION.LIMPIAR)-->
                <parameters>                            <!-- Parametros que recive el procedimiento -->
                </parameters>
            </procedurePreInject>
            <procedurePosInject>                    <!-- Procedimiento a llamar despues de la injeccion de datos, siempre debe retornar un numero como respuesta -->
                <name>PKG_RENDICION.GUARDAR_RESUMEN</name> <!-- Nombre del procedimiento -->
                <parameters>                            <!-- Parametros que recive el procedimiento -->
                <parameter></parameter>
                </parameters>
            </procedurePosInject>
        </database>
    </processor>
    <log> <!-- Bloque para definir localizacion de destino de los logs resultantes -->
        <logProtocol>eft.load.filemanager.LocalDirManager</logProtocol> <!-- dos posibilidades actualmente eft.load.fileManager.FTPManager o eft.load.fileManager.LocalDirManager -->
        <logServer></logServer> <!-- solo necesario para FTP -->
        <logDir>/disk1/gestion_hub_pf/rendiciones/carga/logDir</logDir>
        <logUser></logUser>  <!--  Solo necesario para FTP -->
        <logPassword></logPassword> <!-- Solo necesario para FTP -->        
    </log>    
</loadProcess>
